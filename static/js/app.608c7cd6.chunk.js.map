{"version":3,"sources":["CellElement.js","GameTable.js","PlayersDataForm.js","GameInitializer.js","App.js","web-build/register-service-worker.js"],"names":["CellElement","props","setPointsTable","React","useState","cellPoints","setCellPoints","isFocussed","setIsFocussed","checkEditable","col","row","belongToPlayer","stepNumber","parseInt","numberOfPlayers","pointsTable","undefined","checkFirstCols","checkSecondCols","View","TextInput","style","textAlign","backgroundColor","keyboardType","value","editable","onChangeText","text","points","schoolSum","colSum","updateValue","onBlur","e","setStepNumber","onFocus","maxLength","StyleSheet","create","cellContainer","borderRightWidth","GameTable","state","Text","styles","this","playersNamesArray","playerNumber","toUpperCase","key","tableData","Array","map","x","from","length","y","setCellElement","flexDirection","borderStyle","borderWidth","width","data","singleHead","title","heightArr","textStyle","titleText","flex","Component","inputStyle","height","head","marginRight","btn","marginLeft","borderRadius","btnText","PlayersDataForm","playersNamesSubmitted","submitPlayersNames","index","fill","nameForm","forEach","player","push","sum","i","isNaN","container","buttonContainer","Button","onPress","color","padding","alignItems","justifyContent","marginTop","paddingHorizontal","GameInitializer","setNumberOfPlayers","numberOfPlayersSubmitted","submitNumberOfPlayers","createPlayersNamesArray","onSubmitEditing","event","placeholder","placeholderTextColor","borderBottomWidth","borderBottomColor","App","paddingVertical","borderColor","fontSize","fontWeight","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.608c7cd6.chunk.js","sourcesContent":["import React, { Component, useState} from 'react';\r\nimport { ImagePropTypes, StyleSheet, TextInput, View } from \"react-native\";\r\n\r\nexport default function CellElement(props) {\r\n  const setPointsTable = props.setPointsTable;\r\n  const [cellPoints, setCellPoints] = React.useState();\r\n  const [isFocussed , setIsFocussed ] = React.useState(false);\r\n\r\n  const updateValue = (points) =>{\r\n    // Get a copy of the expenses array\r\n    const pointsTable = [ ...props.pointsTable ];\r\n    if(points){\r\n          // Replace the current expense item\r\n    pointsTable[props.col][props.row - 1] = points;\r\n    pointsTable[props.col][6] = props.schoolSum(props.col);\r\n    pointsTable[props.col][16] = props.colSum(props.col);\r\n\r\n    // Update the parent state\r\n    setPointsTable(pointsTable);\r\n    // Update cell value\r\n    setCellPoints(points);\r\n    }\r\n  }\r\n\r\n  const updateStepNumber = (e) =>{\r\n    // Update step number on cell losing focus\r\n    // if(!isNaN(props.pointsTable[props.col][props.row - 1]) || props.pointsTable[props.col][props.row - 1] == '-'){\r\n\r\n    if(cellPoints){\r\n      props.setStepNumber(props.stepNumber + 1);\r\n      // setIsFocussed(false)\r\n    }\r\n  }\r\n\r\n  const focus = (e) => { \r\n    setIsFocussed(true)\r\n  }\r\n\r\n  function checkEditable(col,row){\r\n    if(props.belongToPlayer == (props.stepNumber % parseInt(props.numberOfPlayers))){\r\n      if( checkFirstCols(col,row) == true || checkSecondCols(col,row) == true || ((props.belongToPlayer + parseInt(props.numberOfPlayers) * 2) == col))\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function checkFirstCols(col,row){\r\n    let pointsTable = props.pointsTable;\r\n    if(props.belongToPlayer == col){\r\n      if(row == 1 && (pointsTable[col][row - 1] == undefined || isFocussed))\r\n        return true;\r\n      else if(((row > 1 && row < 7) || (row > 8 && row <= 16)) && pointsTable[col][row - 2] != undefined && (pointsTable[col][row - 1] == undefined || isFocussed))\r\n        return true;\r\n      else if(row == 8 && pointsTable[col][5] != undefined && (pointsTable[col][7] == undefined || isFocussed))\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function checkSecondCols(col,row){\r\n    let pointsTable = props.pointsTable;\r\n    if((props.belongToPlayer + parseInt(props.numberOfPlayers)) == col){\r\n      if(row == 16 && (pointsTable[col][row - 1] == undefined ||  isFocussed))\r\n        return true;\r\n      else if(((row >= 1 && row < 6) || (row > 7 && row < 16)) && pointsTable[col][row] != undefined && (pointsTable[col][row - 1] == undefined || isFocussed))\r\n          return true;\r\n      else if(row == 6 && pointsTable[col][7] != undefined && (pointsTable[col][5] == undefined || isFocussed))\r\n          return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return(      \r\n    <View>\r\n      <TextInput \r\n        style={{textAlign: \"center\" , backgroundColor : checkEditable(props.col, props.row) == true ? '#e1ffe3': '#f6f8fa'}}\r\n        // keyboardType={'numeric'}\r\n        keyboardType = {'phone-pad'}\r\n        // value = {cellPoints}\r\n        value = {props.pointsTable[props.col][props.row - 1]}\r\n        editable = {checkEditable(props.col, props.row)}\r\n        onChangeText = {text => updateValue(text)}\r\n        onBlur= {updateStepNumber}\r\n        onFocus = {focus}\r\n        maxLength = {3}\r\n      /> \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  cellContainer: { borderRightWidth: 7 },\r\n});","import React, { Component, useState } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity, Alert } from 'react-native';\r\nimport { Table, TableWrapper,Col, Cols, Cell } from 'react-native-table-component';\r\nimport CellElement from './CellElement';\r\n \r\nexport default class GameTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stepNumber : 0,\r\n    }\r\n  }\r\n\r\n  setCellElement(col, row){\r\n    if (row == 0)\r\n      return <Text style={styles.text}>{(this.props.playersNamesArray[this.playerNumber(col)]).toUpperCase()}</Text>\r\n    else if (row == 7)\r\n      return <Text style={styles.text}>{this.props.schoolSum(col)}</Text>\r\n    else if (row == 17)\r\n      return <Text style={styles.text}>{this.props.colSum(col)}</Text>\r\n    else\r\n      return <CellElement \r\n                key = {'' + col + row}\r\n                col = {col} \r\n                row = {row} \r\n                schoolSum = {this.props.schoolSum}\r\n                colSum = {this.props.colSum}\r\n                setPointsTable = {this.props.setPointsTable}\r\n                pointsTable = {this.props.pointsTable}\r\n                belongToPlayer = {this.playerNumber(col)}\r\n                stepNumber = {this.props.stepNumber}\r\n                setStepNumber = {this.props.setStepNumber}\r\n                numberOfPlayers = {this.props.numberOfPlayers}\r\n              />\r\n  }\r\n\r\n\r\n\r\n  playerNumber(col){\r\n    let numberOfPlayers = parseInt(this.props.numberOfPlayers);\r\n    if((col % numberOfPlayers) == 0){\r\n      return 0;\r\n    }\r\n    else if (numberOfPlayers == 3){\r\n      if(((col + 1) % numberOfPlayers) == 0 )\r\n        return 2;\r\n      else\r\n        return 1;\r\n    }\r\n    else\r\n      return 1;\r\n  }\r\n\r\n  render() {\r\n    const state = this.state;\r\n    //create 3 columns for each player and fill them with 18 rows, first row player name, next challenges\r\n    let tableData = [...Array(3 * this.props.numberOfPlayers)]\r\n                    .map((x ,col)=> Array.from({length : 18}, (y,row) => this.setCellElement(col, row)));\r\n\r\n    // let tableTitle = ['1','2','3','4','5','6','SchoolSum','Pair','Two-Pair','Three of a kind','Full-House',\r\n    //                   'Small Straight','Big Straight','Four of a kind','Five of a kind','Card Sum','ColSum'] ;\r\n\r\n    let tableTitle = ['1','2','3','4','5','6','SchoolSum','п','2п','тр','ф',\r\n                      'MC','BC','K','P','Σ','ColSum'] ;\r\n    return (\r\n      <View>\r\n        <Table style={{flexDirection: 'row'}} borderStyle={{borderWidth: 1}}>\r\n          {/* Left Wrapper */}\r\n          <TableWrapper style={{width: 90}}>\r\n            <Cell data=\"Challenge\" style={styles.singleHead}/>\r\n            <TableWrapper style={{flexDirection: 'row'}}>\r\n              <Col data={tableTitle} style={styles.title} heightArr={[30, 30, 30, 30, 30, 30, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35]} textStyle={styles.titleText}></Col>\r\n            </TableWrapper>\r\n          </TableWrapper>\r\n          {/* Right Wrapper */}\r\n          <TableWrapper style={{flex:1}}>\r\n            <Cols data={tableData} heightArr={[40, 30, 30, 30, 30, 30, 30, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35]} textStyle={styles.text} numberOfPlayers={this.props.numberOfPlayers}/>\r\n          </TableWrapper>\r\n        </Table>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n \r\nconst styles = StyleSheet.create({\r\n  inputStyle: {textAlign: \"center\"},\r\n  singleHead: { width: 90, height: 40, backgroundColor: '#62a34e'},\r\n  head: { flex: 1, backgroundColor: '#62a34e' },\r\n  title: { flex: 2, backgroundColor: '#f6f8fa' },\r\n  titleText: { marginRight: 6, textAlign:'right' },\r\n  text: { textAlign: 'center' },\r\n  btn: { width: 58, height: 18, marginLeft: 15, backgroundColor: '#c8e1ff', borderRadius: 2 },\r\n  btnText: { textAlign: 'center' }\r\n});\r\n","import React, { Component, useState  } from 'react';\r\nimport { StyleSheet, Text, TextInput, Button, View } from \"react-native\";\r\nimport GameTable from './GameTable';\r\n\r\nexport default function PlayersDataForm(props) {\r\n    const [playersNamesSubmitted, submitPlayersNames] = React.useState(false);\r\n    const [stepNumber, setStepNumber] = React.useState(0);\r\n\r\n    function schoolSum(col){\r\n        let sum = 0;\r\n        for(let i = 0; i < 6; i++){\r\n            if(!(isNaN(pointsTable[col][i])))\r\n                sum += parseInt(pointsTable[col][i]);\r\n            else if(isNaN(pointsTable[col][i]))\r\n                sum += 0;\r\n        }\r\n        if(sum < 0)\r\n            sum -= 100;\r\n        else \r\n            sum += 50;\r\n        return sum;\r\n    }\r\n\r\n    function colSum(col){\r\n        let sum = this.schoolSum(col);\r\n        for(let i = 7; i < 16; i++){\r\n            if(!(isNaN(pointsTable[col][i])))\r\n                sum += parseInt(pointsTable[col][i]);\r\n            else if(isNaN(pointsTable[col][i]))\r\n                sum += 0;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    const [pointsTable, setPointsTable] = React.useState([...Array(3 * props.numberOfPlayers)]\r\n        .map((x,index)=>Array (17)\r\n        .fill()\r\n        // .fill(0,0,6)\r\n        // .fill(`school ${index} sum`,6,7)\r\n        // .fill(schoolSum(index),6,7)\r\n        // .fill(0,7,16)\r\n        // .fill(`col ${index} sum`,16)\r\n        // .fill(colSum(index),16)\r\n        ));\r\n\r\n    let nameForm = [];\r\n\r\n    props.playersNamesArray.forEach((player,index) => {\r\n        nameForm.push(\r\n            <View key={index}>  \r\n                <Text>Player Name: </Text>\r\n                <TextInput \r\n                    style={styles.inputStyle}\r\n                    onChangeText={text => {\r\n                        //let inputValues = props.playersNamesArray;\r\n                        props.playersNamesArray[index] = text;\r\n                        // this.setState({inputValues})\r\n                    }}\r\n                    maxLength = {10}\r\n                />\r\n            </View>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <View> \r\n        { playersNamesSubmitted ?\r\n            <View>\r\n                <GameTable \r\n                    numberOfPlayers = {props.numberOfPlayers} \r\n                    playersNamesArray = {props.playersNamesArray}\r\n                    schoolSum = {schoolSum}\r\n                    colSum = {colSum}\r\n                    pointsTable = {pointsTable}\r\n                    setPointsTable = {setPointsTable}\r\n                    stepNumber ={stepNumber}\r\n                    setStepNumber ={setStepNumber}\r\n                    />\r\n            </View>\r\n            : \r\n            <View style={styles.container}> \r\n\r\n                {nameForm}\r\n\r\n                <View style={styles.buttonContainer}>  \r\n                    <Button\r\n                        onPress={() => {submitPlayersNames(!playersNamesSubmitted);}}\r\n                        title=\"Submit\"\r\n                        color=\"#841584\"\r\n                    />\r\n                </View>\r\n            </View>\r\n        }\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 24,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 10,\r\n    width: 300,\r\n    height: 40,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 50,\r\n  },\r\n  inputStyle: {\r\n    marginTop: 10,\r\n    width: 300,\r\n    height: 40,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 50,\r\n    backgroundColor: '#b9e4c9',\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\n\r\n","import React, { Component, useState } from 'react';\r\nimport { StyleSheet, Text, TextInput, Button, View } from \"react-native\";\r\n// import GameTable from './GameTable';\r\nimport PlayersDataForm from './PlayersDataForm';\r\n\r\nexport default function GameInitializer() {\r\n  const [numberOfPlayers, setNumberOfPlayers] = React.useState(2);\r\n  const [numberOfPlayersSubmitted, submitNumberOfPlayers] = React.useState(false);\r\n\r\n  function createPlayersNamesArray(numberOfPlayers){\r\n    let playersNamesArray = [...Array(parseInt(numberOfPlayers))].fill('nameMe',0);\r\n    return playersNamesArray;\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      { numberOfPlayersSubmitted ?\r\n        <View>\r\n          <PlayersDataForm playersNamesArray = {createPlayersNamesArray(numberOfPlayers)} numberOfPlayers = {numberOfPlayers}/>\r\n          <View style={styles.container}>\r\n            <Button\r\n                  onPress={() => {\r\n                    submitNumberOfPlayers(!numberOfPlayersSubmitted);\r\n                    setNumberOfPlayers(2);\r\n                  }}\r\n                  title=\"Home Page\"\r\n                  color=\"#841584\"\r\n                />\r\n          </View>\r\n        </View>\r\n        : \r\n        <View style={styles.container}> \r\n          <View>\r\n            {/* <label>Enter Number of Players:  */}\r\n              <TextInput \r\n                  style={styles.inputStyle}\r\n                  onChangeText={text => setNumberOfPlayers(text)}\r\n                  onSubmitEditing = {(event) => (submitNumberOfPlayers(!numberOfPlayersSubmitted))}\r\n                  numberOfPlayers = {numberOfPlayers}\r\n                  placeholder = \"Number of Players\"\r\n                  placeholderTextColor = \"#73377e\"\r\n                  maxLength = {1}\r\n                />\r\n            {/* </label> */}\r\n\r\n            <View style={styles.buttonContainer}>  \r\n              <Button\r\n                onPress={() => {submitNumberOfPlayers(!numberOfPlayersSubmitted);}}\r\n                title=\"Submit\"\r\n                color=\"#841584\"\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      }\r\n    </View>\r\n  )\r\n}\r\n \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 24,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 10,\r\n    width: 300,\r\n    height: 40,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 50,\r\n  },\r\n  inputStyle: {\r\n    marginTop: 10,\r\n    width: 300,\r\n    height: 40,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 50,\r\n    backgroundColor: '#b9e4c9',\r\n    textAlign: \"center\",\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: 'gray',\r\n  },\r\n});\r\n","import React, { Component, useState  } from 'react';\nimport { StyleSheet, Text, TextInput, Button, View } from \"react-native\";\nimport GameInitializer from './GameInitializer';\n\nexport default function App() {\n  return (\n  <View>\n    <Text style={styles.title}>Dice Poker</Text>\n    <GameInitializer/>\n  </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginTop: 35,\n    paddingVertical: 8,\n    borderWidth: 4,\n    borderColor: \"#20232a\",\n    borderRadius: 6,\n    backgroundColor: \"#61dafb\",\n    color: \"#20232a\",\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n});\n\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/DicePoker/expo-service-worker.js', { scope: '/DicePoker/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}